version: '3.9'

services: 
  postgres:
    image: postgres:9.5-alpine
    restart: always
    hostname: kong-database
    container_name: kong-database
    environment: 
      - POSTGRES_USER=kong
      - POSTGRES_DB=kong
      - POSTGRES_PASSWORD=kong
    ports:
      - "5432:5432"
    networks:
      - myNetworkCompose
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: on-failure

  kong-bootstrap:
    image: kong:latest
    hostname: kong-bootstrap
    container_name: kong-bootstrap
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_DATABASE=kong
      - KONGPG_USER=kong
      - KONG_PG_PASSWORD=kong
    command: kong migrations bootstrap && kong migrations up && kong migrations finish
    networks:
      - myNetworkCompose

  kong:
    image: kong:latest
    container_name: kong
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_PASSWORD=kong 
      - KONG_PG_USER=kong
      - KONG_PG_DATABASE=kong
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stdout
      - KONG_ADMIN_ERROR_LOG=/dev/stdout
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
      - KONG_TRUSTED_IPS=0.0.0.0/0,::/0
      - VIRTUAL_HOST=netflix.local
    ports:
      - 127.0.0.1:80:8000
      - 127.0.0.1:81:8001
    depends_on:
      - kong-bootstrap
    restart: on-failure
    networks:
      - myNetworkCompose

  mongoDB:
    image: mongo
    container_name: mongo_compose
    volumes: 
      - /mongo:/data/dbs
    networks:
      - myNetworkCompose

  dbapi:
    build:
      context: ./dbApi
    depends_on:
      - mongoDB
    image: dbapi_compose
    container_name: dbapi_compose
    networks:
      - myNetworkCompose

  netflix:
    build:
      context: ./netflix
    depends_on:
      - dbapi
    image: netflix_compose
    container_name: netflix_compose
    networks:
      - myNetworkCompose

networks:
  myNetworkCompose:
      name: myNetworkCompose
      driver: bridge